---
- name: Configure a RHEL host as a robust PXE host
  hosts: boot
  tasks:
  - name: Install Packages
    ansible.builtin.include_tasks:
      file: tasks/install-packages.yml
      apply:
        tags:
          - install-packages
    tags:
      - install-packages

  - name: General Prework
    ansible.builtin.include_tasks:
      file: tasks/general-prework.yml
      apply:
        tags:
          - general-prework
    tags:
      - general-prework

  - name: Configure FTP
    when: enable_ftp
    ansible.builtin.include_tasks:
      file: tasks/setup-vsftpd.yml
      apply: 
        tags:
          - setup-vsftpd
    tags:
      - setup-vsftpd

  - name: Configure TFTP
    when: enable_tftp
    ansible.builtin.include_tasks:
      file: tasks/setup-tftpd.yml
      apply:
        tags:
          - setup-tftpd
    tags:
      - setup-tftpd

  - name: Configure HTTP
    when: enable_http
    ansible.builtin.include_tasks:
      file: tasks/setup-httpd.yml
      apply:
        tags:
          - setup-httpd
    tags:
      - setup-httpd

  - name: Configure NFS
    when: enable_nfs
    ansible.builtin.include_tasks:
      file: tasks/setup-nfs-server.yml
      apply:
        tags:
          - setup-nfs-server
    tags:
      - setup-nfs-server

  - name: Configure DHCP
    when: enable_dhcpd
    ansible.builtin.include_tasks:
      file: tasks/setup-dhcpd.yml
      apply:
        tags:
          - setup-dhcpd
    tags:
      - setup-dhcpd

  - name: Base System Operations
    block:

      - name: Create global paths
        ansible.builtin.file:
          path: "{{ path_item }}"
          state: directory
          owner: nobody
          group: nobody
          mode: 0755
        loop:
          - "{{ global_base_path }}" # /var/ftp/pub
          - "{{ install_iso_mount_base_path }}" # /var/ftp/pub/pxe/install, where all the ISOs and their mounts go
          - "{{ install_iso_mount_base_path }}/aarch64" # /var/ftp/pub/pxe/install/aarch64
          - "{{ install_iso_mount_base_path }}/x86_64" # /var/ftp/pub/pxe/install/x86_64
          - "{{ tftp_server_base_path }}" # /var/ftp/pub/pxe/tftpboot
          - "{{ tftp_server_base_path }}/EFI" # /var/ftp/pub/pxe/tftpboot/EFI
          - "{{ tftp_server_base_path }}/EFI/x86_64" # /var/ftp/pub/pxe/tftpboot/EFI/x86_64, dir where the default grub.cfg menu file is located
          - "{{ tftp_server_base_path }}/EFI/aarch64" # /var/ftp/pub/pxe/tftpboot/EFI/aarch64, dir where the default grub.cfg menu file is located
          - "{{ tftp_server_base_path }}/BIOS" # /var/ftp/pub/pxe/tftpboot/BIOS
          - "{{ tftp_server_base_path }}/BIOS/x86_64" # /var/ftp/pub/pxe/tftpboot/BIOS/x86_64
          - "{{ tftp_server_base_path }}/BIOS/x86_64/pxelinux.cfg" # /var/ftp/pub/pxe/tftpboot/BIOS/x86_64/pxelinux.cfg, dir where the default menu file is located
        loop_control:
          loop_var: path_item

      - name: Copy the Syslinux files for BIOS booting on X86_64
        ansible.builtin.copy:
          src: /usr/share/syslinux/
          dest: "{{ tftp_server_base_path }}/BIOS/x86_64/"
          owner: nobody
          group: nobody
          mode: 0755
          remote_src: true
          directory_mode: true

      - name: Setup EFI Boot File Seeding
        block:
          - name: Check for seeders, set facts
            ansible.builtin.include_tasks:
              file: tasks/efi-boot-seeding.yml
              apply:
                tags:
                  - efi-boot-seeding
            loop: "{{ distros }}"
            loop_control:
              loop_var: distro_item
            tags:
              - efi-boot-seeding

          - name: Failure State - EFI X86_64 Detected, without seeder
            when: efi_x86_64_detected == true and efi_x86_64_seeder_detected == false
            ansible.builtin.fail:
              msg: "EFI boot method detected for x86_64, but no seeder was detected.  Please set the 'efi_loader_seed' variable to 'true' for the distro you wish to seed as the primary bootloader seed."

          - name: Failure State - EFI AARCH64 Detected, without seeder
            when: efi_aarch64_detected == true and efi_aarch64_seeder_detected == false
            ansible.builtin.fail:
              msg: "EFI boot method detected for aarch64, but no seeder was detected.  Please set the 'efi_loader_seed' variable to 'true' for the distro you wish to seed as the primary bootloader seed."

          - name: Seed the X86_64 Bootloader files
            when: efi_x86_64_seeder_name is defined and efi_x86_64_seeder_name != "" and efi_x86_64_seeder_name == distro_item.name and distro_item.arch == "x86_64"
            ansible.builtin.copy:
              src: "{{ efi_x86_64_seeder_path }}/{{ distro_item.efi_loader_path | default('EFI/BOOT/') }}"
              dest: "{{ tftp_server_base_path }}/EFI/x86_64/"
              owner: nobody
              group: nobody
              mode: 0755
              remote_src: true
              directory_mode: true
            loop: "{{ distros }}"
            loop_control:
              loop_var: distro_item

          - name: Seed the AARCH64 Bootloader files
            when: efi_aarch64_seeder_name is defined and efi_aarch64_seeder_name != "" and efi_aarch64_seeder_name == distro_item.name and distro_item.arch == "aarch64"
            ansible.builtin.copy:
              src: "{{ efi_aarch64_seeder_path }}/{{ distro_item.efi_loader_path | default('EFI/BOOT/') }}"
              dest: "{{ tftp_server_base_path }}/EFI/aarch64/"
              owner: nobody
              group: nobody
              mode: 0755
              remote_src: true
              directory_mode: true
            loop: "{{ distros }}"
            loop_control:
              loop_var: distro_item

      - name: Template PXE/GRUB Menus
        block:
          - name: Template the BIOS Boot Menu for X86_64
            template:
              src: templates/menu-x86_64-bios.j2
              dest: "{{ tftp_server_base_path }}/BIOS/x86_64/pxelinux.cfg/default"
              owner: nobody
              group: nobody
              mode: 0755

          - name: Template the EFI Boot Menu for X86_64
            template:
              src: templates/menu-x86_64-efi.j2
              dest: "{{ tftp_server_base_path }}/EFI/x86_64/grub.cfg"
              owner: nobody
              group: nobody
              mode: 0755

          - name: Template the EFI Boot Menu for aarch64
            template:
              src: templates/menu-aarch64-efi.j2
              dest: "{{ tftp_server_base_path }}/EFI/aarch64/grub.cfg"
              owner: nobody
              group: nobody
              mode: 0755

  - name: Per Distro Operations
    block:

      - name: Create distro paths
        ansible.builtin.include_tasks:
          file: tasks/create-distro-paths.yml
          apply:
            tags:
              - create-distro-paths
        loop: "{{ distros }}"
        loop_control:
          loop_var: distro_item
        tags:
          - create-distro-paths

      - name: Copy/Download ISOs
        ansible.builtin.include_tasks:
          file: tasks/download-isos.yml
          apply:
            tags:
              - download-isos
        loop: "{{ distros }}"
        loop_control:
          loop_var: distro_item
        tags:
          - download-isos

      - name: Setup ISO Mounts
        ansible.builtin.include_tasks:
          file: tasks/mount-isos.yml
          apply:
            tags:
              - mount-isos
        loop: "{{ distros }}"
        loop_control:
          loop_var: distro_item
        tags:
          - mount-isos

      - name: Copy needed files from ISOs
        ansible.builtin.include_tasks:
          file: tasks/copy-iso-files.yml
          apply:
            tags:
              - copy-iso-files
        loop: "{{ distros }}"
        loop_control:
          loop_var: distro_item
        tags:
          - copy-iso-files
